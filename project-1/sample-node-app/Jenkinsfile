pipeline {
    agent any

    environment {
        APP_NAME = "my-node-app"
        APP_PORT = "3001"
        DOCKER_IMAGE = "my-node-app:latest"
        DOCKER_CONTAINER = "my-node-app-container"
    }

    stages {
        stage('Checkout') {
            steps {
                // Explicit git checkout with credentials
                git branch: 'main',
                    url: 'https://github.com/Shreyashh09/devopslab.git',
                    credentialsId: 'github-creds'  // <-- replace with your actual credential ID
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    docker.image('node:18-alpine').inside {
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    docker.image('node:18-alpine').inside {
                        sh 'npm test || echo "No tests found, skipping..."'
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE} ."
                }
            }
        }

        stage('Deploy (Simulated)') {
            steps {
                script {
                    // Stop old container if running
                    sh "docker stop ${DOCKER_CONTAINER} || true"
                    sh "docker rm ${DOCKER_CONTAINER} || true"

                    // Run new container
                    sh "docker run -d --name ${DOCKER_CONTAINER} -p ${APP_PORT}:3000 ${DOCKER_IMAGE}"

                    echo "🚀 Application deployed and running at http://localhost:${APP_PORT}"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        success {
            echo '✅ Pipeline succeeded!'
        }
        failure {
            echo '❌ Pipeline failed!'
        }
    }
}